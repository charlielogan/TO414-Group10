knitr::opts_chunk$set(echo = TRUE)
spotify <- read.csv("data_o.csv")
knitr::opts_chunk$set(echo = TRUE)
spotify <- read.csv("data.csv")
#spotify_by_artist <- read.csv("data_by_artist.csv")
str(spotify)
#summary(spotify)
audio_features <- read.csv("tracks.csv")
test_set <- sample(1:nrow(spotify), 30000)
spotify_train <- spotify[-test_set, ]
spotify_test <- spotify[test_set, ]
spotify$binary_hit_class <- ifelse(spotify$hit_class == "mega-hit", 1, 0)
# Cut year into bins by decade
spotify$decades <- cut(spotify$year, breaks = c(0,1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999, 2009, 2019, Inf), labels = c("20s", "30s", "40s", "50s", "60s", "70s", "80s", "90s", "2000s", "2010s", "2020s"))
# Classify popularity into bins by 75% and 90% percentiles
popularity_threshold <- 42
quantile(spotify$popularity, probs=seq(.1, .9, by = .1))
spotify$hit_class <- ifelse(spotify$popularity >= 56, "mega-hit", ifelse(spotify$popularity > popularity_threshold, "hit", "not hit"))
spotify$hit_class <- as.factor(spotify$hit_class)
# true or false if top 10% or not
spotify$binary_hit_class <- ifelse(spotify$hit_class == "mega-hit", 1, 0)
spotify$binary_hit_class <- as.factor(spotify$binary_hit_class)
table(spotify$hit_class)
log_test_labels <- spotify_test$binary_hit_class
log_test <- subset(spotify_test, select=-c(binary_hit_class))
test_set <- sample(1:nrow(spotify), 30000)
spotify_train <- spotify[-test_set, ]
spotify_test <- spotify[test_set, ]
log_test_labels <- spotify_test$binary_hit_class
log_test <- subset(spotify_test, select=-c(binary_hit_class))
log_train <- subset(spotify_train, select=-c(artists, popularity, year, hit_class))
log_model <- train(binary_hit_class ~ ., data = log_train, method = "glm", family="binomial")
packages <- c("dplyr", "class", "caret", "gmodels", "C50")
lapply(packages, require, character.only = TRUE)
log_test_labels <- spotify_test$binary_hit_class
log_test <- subset(spotify_test, select=-c(binary_hit_class))
log_train <- subset(spotify_train, select=-c(artists, popularity, year, hit_class))
log_model <- train(binary_hit_class ~ ., data = log_train, method = "glm", family="binomial")
spotify <- read.csv("data.csv")
#spotify_by_artist <- read.csv("data_by_artist.csv")
#drop unneccessary variables and convert factors
spotify <- subset(spotify, select = -c(id, name, release_date))
spotify$artists <- as.factor(spotify$artists)
spotify$key <- as.factor(spotify$key)
str(spotify)
#summary(spotify)
audio_features <- read.csv("tracks.csv")
spotify <- subset(spotify, select = -c(id, name, release_date))
spotify <- subset(spotify, select = -c(id, name, release_date))
spotify <- read.csv("data.csv")
#spotify_by_artist <- read.csv("data_by_artist.csv")
str(spotify)
#summary(spotify)
audio_features <- read.csv("tracks.csv")
spotify <- subset(spotify, select = -c(id, name, release_date))
spotify$artists <- as.factor(spotify$artists)
spotify$key <- as.factor(spotify$key)
# Cut year into bins by decade
spotify$decades <- cut(spotify$year, breaks = c(0,1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999, 2009, 2019, Inf), labels = c("20s", "30s", "40s", "50s", "60s", "70s", "80s", "90s", "2000s", "2010s", "2020s"))
# Classify popularity into bins by 75% and 90% percentiles
popularity_threshold <- 42
quantile(spotify$popularity, probs=seq(.1, .9, by = .1))
spotify$hit_class <- ifelse(spotify$popularity >= 56, "mega-hit", ifelse(spotify$popularity > popularity_threshold, "hit", "not hit"))
spotify$hit_class <- as.factor(spotify$hit_class)
# true or false if top 10% or not
spotify$binary_hit_class <- ifelse(spotify$hit_class == "mega-hit", 1, 0)
spotify$binary_hit_class <- as.factor(spotify$binary_hit_class)
table(spotify$hit_class)
log_test_labels <- spotify_test$binary_hit_class
log_test <- subset(spotify_test, select=-c(binary_hit_class))
log_train <- subset(spotify_train, select=-c(artists, popularity, year, hit_class))
log_model <- train(binary_hit_class ~ ., data = log_train, method = "glm", family="binomial")
test_set <- sample(1:nrow(spotify), 30000)
spotify_train <- spotify[-test_set, ]
spotify_test <- spotify[test_set, ]
log_test_labels <- spotify_test$binary_hit_class
log_test_labels <- spotify_test$binary_hit_class
log_test <- subset(spotify_test, select=-c(binary_hit_class))
log_train <- subset(spotify_train, select=-c(artists, popularity, year, hit_class))
log_model <- train(binary_hit_class ~ ., data = log_train, method = "glm", family="binomial")
pred <- predict(log_model, log_test)
pred <- predict(log_model, log_test)
confusionMatrix(pred, log_test_labels)
summary(log_model)
knn_train <- subset(log_train, select=-c(decades))
knn_test <- subset(log_test, select=-c(artists, popularity, year, decades, hit_class))
knn_train <- as.data.frame(lapply(knn_train[1:(ncol(knn_train)-1)], normalize))
normalize <- function(x){
return ((x-min(x))/(max(x)-min(x)))
}
set.seed(1234)
knn_train <- subset(log_train, select=-c(decades))
knn_test <- subset(log_test, select=-c(artists, popularity, year, decades, hit_class))
knn_train <- as.data.frame(lapply(knn_train[1:(ncol(knn_train)-1)], normalize))
knn_train <- subset(log_train, select=-c(decades, key))
knn_test <- subset(log_test, select=-c(artists, popularity, year, decades, hit_class, key))
knn_train <- as.data.frame(lapply(knn_train[1:(ncol(knn_train)-1)], normalize))
knn_test <- as.data.frame(lapply(knn_test[1:ncol(knn_test)], normalize))
knn_model_pred <- knn(train=knn_train, test=knn_test, cl=log_train$binary_hit_class, k=379)
confusionMatrix(knn_model_pred, log_test_labels)
spotify <- read.csv("data.csv")
#spotify_by_artist <- read.csv("data_by_artist.csv")
str(spotify)
#summary(spotify)
#audio_features <- read.csv("tracks.csv")
packages <- c("dplyr", "class", "caret", "gmodels", "C50")
lapply(packages, require, character.only = TRUE)
spotify <- subset(spotify, select = -c(id, name, release_date))
spotify$artists <- as.factor(spotify$artists)
spotify$key <- as.factor(spotify$key)
# Cut year into bins by decade
spotify$decades <- cut(spotify$year, breaks = c(0,1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999, 2009, 2019, Inf), labels = c("20s", "30s", "40s", "50s", "60s", "70s", "80s", "90s", "2000s", "2010s", "2020s"))
# Classify popularity into bins by 75% and 90% percentiles
popularity_threshold <- 42
quantile(spotify$popularity, probs=seq(.1, .9, by = .1))
spotify$hit_class <- ifelse(spotify$popularity >= 56, "mega-hit", ifelse(spotify$popularity > popularity_threshold, "hit", "not hit"))
spotify$hit_class <- as.factor(spotify$hit_class)
# true or false if top 10% or not
spotify$binary_hit_class <- ifelse(spotify$hit_class == "mega-hit", 1, 0)
spotify$binary_hit_class <- as.factor(spotify$binary_hit_class)
table(spotify$hit_class)
audio_features$release_year <- substr(audio_features$release_date,1,4)
audio_features <- read.csv("tracks.csv")
audio_features$release_year <- substr(audio_features$release_date,1,4)
audio_features$release_year <- as.numeric(audio_features$release_year)
audio_features$key <- as.factor(audio_features$key)
boxplot(audio_features$release_year, horizontal = T, main = "Year of Song Release")
audio_features <- subset(audio_features, select = -c(id, name, popularity, artists, id_artists, release_date))
audio_features <- audio_features %>%
select(danceability,everything())   #bring `danceability` to first column
normalize <- function(x){
return ((x-min(x))/(max(x)-min(x)))
}
set.seed(1234)
audio_featuresMM <- as.data.frame(model.matrix(~.-1,audio_features))  #all columns are numeric
audio_featuresN<- lapply(audio_featuresMM,normalize) #apply normalize() to all columns
audio_featuresN <- as.data.frame(audio_featuresN)
test_set <- sample(1:nrow(spotify), 30000)
spotify_train <- spotify[-test_set, ]
spotify_test <- spotify[test_set, ]
#audio_features
audio_train <- audio_featuresN[-test_set,]
audio_test <- audio_featuresN[test_set,]
#Response / Labels
audio_train_labs <- audio_featuresN[-test_set,"danceability"]
audio_test_labs <- audio_featuresN[test_set,"danceability"]
ggplot(spotify, aes(x = decades, y = tempo, fill=decades)) +
geom_bar(stat = "summary", fun = "mean")
ggplot(spotify, aes(x = decades, y = popularity, fill=decades)) +
geom_bar(stat = "summary", fun = "mean")
ggplot(spotify, aes(x = hit_class, y = danceability, fill=hit_class)) +
geom_bar(stat = "summary", fun = "mean")
sort(table(spotify$artists), decreasing = TRUE)[1:20]
eighties_train <- subset(spotify_train, select = -c(artists, year, hit_class))
eighties_test <- subset(spotify_test, select = -c(artists, year, hit_class))
summary(eighties_train)
summary(eighties_test)
eighties_train$eighties <- ifelse(eighties_train$decades == "80s", 1, 0)
eighties_test$eighties <- ifelse(eighties_test$decades == "80s", 1, 0)
eighties_log <- glm(eighties ~ acousticness + danceability + duration_ms + energy + explicit +
instrumentalness + liveness + loudness + mode +
speechiness + tempo + key + instrumentalness*danceability +
duration_ms*acousticness + duration_ms*valence + duration_ms*valence + danceability*instrumentalness,
data = eighties_train, family = "binomial")
summary(eighties_log)
eighties_pred_log <- predict(eighties_log, eighties_test, type = "response")
eighties_pred_log <- ifelse(eighties_pred_log > .23, 1, 0)
summary(eighties_pred_log)
confusionMatrix(as.factor(eighties_pred_log), as.factor(eighties_test$eighties))
library(C50)
eighties_dtm <- C5.0(as.factor(eighties) ~ acousticness + danceability + duration_ms + energy + explicit +
instrumentalness + liveness + loudness + mode +
speechiness + tempo + key + instrumentalness*energy +
duration_ms*acousticness + duration_ms*valence + duration_ms*valence + danceability*instrumentalness, data = eighties_train)
eighties_pred_dt <- predict(eighties_log, eighties_test, type = "response")
eighties_pred_dt <- ifelse(eighties_pred_dt > .5, 1, 0)
confusionMatrix(as.factor(eighties_pred_dt), as.factor(eighties_test$eighties))
library(C50)
eighties_dtm <- C5.0(as.factor(eighties) ~ acousticness + danceability + duration_ms + energy + explicit +
instrumentalness + liveness + loudness + mode +
speechiness + tempo + key + instrumentalness*energy +
duration_ms*acousticness + duration_ms*valence + duration_ms*valence + danceability*instrumentalness, data = eighties_train)
# Explain cutoff of .23
eighties_pred_dt <- predict(eighties_log, eighties_test, type = "response")
eighties_pred_dt <- ifelse(eighties_pred_dt > .23, 1, 0)
confusionMatrix(as.factor(eighties_pred_dt), as.factor(eighties_test$eighties))
library(C50)
eighties_dtm <- C5.0(as.factor(eighties) ~ acousticness + danceability + duration_ms + energy + explicit +
instrumentalness + liveness + loudness + mode +
speechiness + tempo + key + instrumentalness*energy +
duration_ms*acousticness + duration_ms*valence + duration_ms*valence + danceability*instrumentalness, data = eighties_train)
# Explain cutoff of .23
eighties_pred_dt <- predict(eighties_dtm, eighties_test, type = "response")
library(C50)
eighties_dtm <- C5.0(as.factor(eighties) ~ acousticness + danceability + duration_ms + energy + explicit +
instrumentalness + liveness + loudness + mode +
speechiness + tempo + key +
+valence, data = eighties_train)
eighties_pred_dt <- predict(eighties_dtm, eighties_test, type = "class")
confusionMatrix(as.factor(eighties_pred_dt), as.factor(eighties_test$eighties))
decade_dtm <- C5.0(decades ~ acousticness + danceability + duration_ms + energy + explicit +
instrumentalness + liveness + loudness +
speechiness + tempo + valence, data = spotify_train)
decades_pred <- predict(decade_dtm, spotify_test, type = "class")
summary(decades_pred)
confusionMatrix(decades_pred, as.factor(spotify_test$decades))
dance_model <- lm(danceability ~ tempo + valence + speechiness +
mode + liveness + key + instrumentalness +
explicit + energy + duration_ms + acousticness, data = spotify)
summary(dance_model)
dm1 <- lm(danceability ~ ., data = audio_train)
pred <- predict(log_model, log_test)
confusionMatrix(pred, log_test_labels)
summary(log_model)
confusionMatrix(knn_model_pred, log_test_labels)
confusionMatrix(knn_model_pred, log_test_labels)
